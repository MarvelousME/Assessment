@model IEnumerable<Phonebook.Web.Dtos.PhonebookDto>
@using GridMvc.Html
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<a href="/phonebook/save" class="btn btn-primary">
    <i class="material-icons">create</i>
    New Contact
</a>

@if (Model != null && Model.Count() > 0)
{
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <input type="text" class="form-control mdl-textfield--floating-label" id="searchInput" name="searchInput" placeholder="Type in search textfield to filter contacts" />
            </div>
        </div>
    </div>
    <div>
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-header" data-background-color="purple">
                            <h4 class="title">Contacts</h4>
                            <p class="category">List of Contacts</p>
                        </div>
                        <div class="card-content table-responsive">
                            @Html.Grid(Model).Columns(columns =>
                       {
                           //columns.Add(c => c.Id).Titled("ID");
                           columns.Add(c => c.Name).Titled("Name").Filterable(true).Css("col-md-6 mdl-data-table__cell--non-numeric");
                           columns.Add(c => c.Surname).Titled("Surname").Filterable(true).Css("col-md-6 mdl-data-table__cell--non-numeric");
                           columns.Add()
                           .Encoded(false)
                           .Sanitized(false)
                           .RenderValueAs(o => Html.ActionLink("Edit", "Edit", new { Controller = "Phonebook", id = o.Id }));
                           columns.Add()
                           .Encoded(false)
                           .Sanitized(false)
                           .RenderValueAs(o => Html.ActionLink("View", "Details", new { Controller = "Phonebook", id = o.Id }));
                           columns.Add()
                                         .Encoded(false)
                                         .Sanitized(false)
                                         .RenderValueAs(o => Html.ActionLink("Delete", "Delete", new { Controller = "Phonebook", id = o.Id }));
                       }).WithPaging(10).Sortable(true)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


@section Scripts
    {
    <script type="text/javascript">
        $(document).ready(function () {
            $("#searchInput").keyup(function () {
                //split the current value of searchInput
                var data = this.value.split(" ");
                //create a jquery object of the rows
                var jo = $("tbody").find("tr");
                if (this.value == "") {
                    jo.show();
                    return;
                }
                //hide all the rows
                jo.hide();

                //Recusively filter the jquery object to get results.
                jo.filter(function (i, v) {
                    var $t = $(this);
                    for (var d = 0; d < data.length; ++d) {
                        if ($t.is(":contains('" + data[d] + "')")) {
                            return true;
                        }
                    }
                    return false;
                })
                    //show the rows that match.
                    .show();
            }).focus(function () {
                this.value = "";
                $(this).css({
                    "color": "black"
                });
                $(this).unbind('focus');
            }).css({
                "color": "#C0C0C0"
            });
        });
    </script>
}
